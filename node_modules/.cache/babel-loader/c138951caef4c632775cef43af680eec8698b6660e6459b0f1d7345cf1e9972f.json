{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjan\\\\Documents\\\\GitHub\\\\Airqualitymonitoringdevice\\\\src\\\\Dashbord.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useState } from 'react';\nimport Gauge from './Gauge';\nimport GaugeChart from 'react-gauge-chart';\nimport './Dashbord.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemperatureGauge = ({\n  value\n}) => {\n  const labels = [];\n  const angleStep = 180 / (labels.length - 1); // Calculate angle step based on labels\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"temperature-gauge\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gauge-container\",\n      children: [/*#__PURE__*/_jsxDEV(GaugeChart, {\n        id: \"temperature\",\n        nrOfLevels: 30 // Adjust to have more segments for better number positioning\n        ,\n        colors: ['#00FF00', '#FFBF00', '#FF0000'],\n        arcWidth: 0.3,\n        percent: value / 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-title\",\n        children: \"Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-value\",\n        children: [value, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-labels\",\n        children: labels.map((label, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gauge-label\",\n          style: {\n            transform: `rotate(${i * angleStep - 90}deg) translate(0, -50px)`\n          },\n          children: label\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = TemperatureGauge;\nconst Dashboard = () => {\n  _s();\n  const [coValue, setCoValue] = useState(50);\n  const [no2Value, setNo2Value] = useState(30);\n  const [ch4Value, setCh4Value] = useState(70);\n  const [nh3Value, setNh3Value] = useState(40);\n  const [temperature, setTemperature] = useState(22.5);\n  const [dustValue, setDustValue] = useState(60);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gauges-row\",\n      children: [/*#__PURE__*/_jsxDEV(Gauge, {\n        id: \"co\",\n        title: \"CO\",\n        value: coValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Gauge, {\n        id: \"no2\",\n        title: \"NO\\u2082\",\n        value: no2Value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Gauge, {\n        id: \"ch4\",\n        title: \"CH\\u2084\",\n        value: ch4Value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Gauge, {\n        id: \"nh3\",\n        title: \"NH\\u2083\",\n        value: nh3Value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gauges-row\",\n      children: [/*#__PURE__*/_jsxDEV(TemperatureGauge, {\n        value: temperature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-container\",\n        children: /*#__PURE__*/_jsxDEV(Gauge, {\n          id: \"dust\",\n          title: \"Dust Level\",\n          value: dustValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Qcdd9Tk5q9V+7dvg+tQEUqyDLMI=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"TemperatureGauge\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","Gauge","GaugeChart","jsxDEV","_jsxDEV","TemperatureGauge","value","labels","angleStep","length","className","children","id","nrOfLevels","colors","arcWidth","percent","fileName","_jsxFileName","lineNumber","columnNumber","map","label","i","style","transform","_c","Dashboard","_s","coValue","setCoValue","no2Value","setNo2Value","ch4Value","setCh4Value","nh3Value","setNh3Value","temperature","setTemperature","dustValue","setDustValue","title","_c2","$RefreshReg$"],"sources":["C:/Users/anjan/Documents/GitHub/Airqualitymonitoringdevice/src/Dashbord.js"],"sourcesContent":["// src/components/Dashboard.js\r\nimport React, { useState } from 'react';\r\nimport Gauge from './Gauge';\r\nimport GaugeChart from 'react-gauge-chart';\r\nimport './Dashbord.css';\r\n\r\nconst TemperatureGauge = ({ value }) => {\r\n  const labels = [];\r\n  const angleStep = 180 / (labels.length - 1); // Calculate angle step based on labels\r\n\r\n  return (\r\n    <div className=\"temperature-gauge\">\r\n      <div className=\"gauge-container\">\r\n        <GaugeChart\r\n          id=\"temperature\"\r\n          nrOfLevels={30} // Adjust to have more segments for better number positioning\r\n          colors={['#00FF00', '#FFBF00', '#FF0000']}\r\n          arcWidth={0.3}\r\n          percent={value / 150}\r\n        />\r\n        <div className=\"gauge-title\">\r\n          Temperature\r\n        </div>\r\n        <div className=\"gauge-value\">\r\n          {value}°C\r\n        </div>\r\n        <div className=\"gauge-labels\">\r\n          {labels.map((label, i) => (\r\n            <span\r\n              key={i}\r\n              className=\"gauge-label\"\r\n              style={{ transform: `rotate(${i * angleStep - 90}deg) translate(0, -50px)` }}\r\n            >\r\n              {label}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [coValue, setCoValue] = useState(50);\r\n  const [no2Value, setNo2Value] = useState(30);\r\n  const [ch4Value, setCh4Value] = useState(70);\r\n  const [nh3Value, setNh3Value] = useState(40);\r\n  const [temperature, setTemperature] = useState(22.5);\r\n  const [dustValue, setDustValue] = useState(60);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"gauges-row\">\r\n        <Gauge id=\"co\" title=\"CO\" value={coValue} />\r\n        <Gauge id=\"no2\" title=\"NO₂\" value={no2Value} />\r\n        <Gauge id=\"ch4\" title=\"CH₄\" value={ch4Value} />\r\n        <Gauge id=\"nh3\" title=\"NH₃\" value={nh3Value} />\r\n      </div>\r\n      <div className=\"gauges-row\">\r\n        <TemperatureGauge value={temperature} />\r\n        <div className=\"gauge-container\">\r\n          <Gauge id=\"dust\" title=\"Dust Level\" value={dustValue} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}